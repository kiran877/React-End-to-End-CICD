pipeline {
    agent any  

    environment {
        NODEJS_HOME = tool name: 'Node18', type: 'nodejs'
        PATH = "${NODEJS_HOME}/bin:${env.PATH}"
        SONAR_URL = "http://54.221.145.141:9000"
        DOCKER_IMAGE = "saikiran078/react-firebase-cicd:${BUILD_NUMBER}"
        REGISTRY_CREDENTIALS = credentials('docker-cred')
        GIT_REPO_NAME = "React-End-to-End-CICD"
        GIT_USER_NAME = "kiran877"
    }

    stages {
        stage('Checkout') {
            steps {
                sh 'echo passed'
            }
        }

        stage('Install Dependencies & Build React App') {
            steps {
                sh '''
                    cd React-sonar-argocd/react-firebase-app
                    npm install
                    npm run build
                '''
            }
        }

       stage('Static Code Analysis') {
    environment {
        SONAR_URL = "http://54.226.42.215:9000/" // Ensure this is the correct SonarQube URL
    }
    steps {
        withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
            sh '''
                cd React-sonar-argocd/react-firebase-app
                npm install
                npm run sonar -- -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}
            '''
        }
    }
}


        stage('Build and Push Docker Image') {
            steps {
                script {
                    sh '''
                        cd React-sonar-argocd/react-firebase-app
                        docker build -t ${DOCKER_IMAGE} .
                    '''
                    docker.withRegistry('https://index.docker.io/v1/', "docker-cred") {
                        docker.image("${DOCKER_IMAGE}").push()
                    }
                }
            }
        }

        stage('Update Deployment File') {
            steps {
                withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
                    sh '''
                        git config --global user.email "kirangavvala078@gmail.com"
                        git config --global user.name "kiran877"
                        sed -i "s|replaceImageTag|${BUILD_NUMBER}|g" React-sonar-argocd/react-firebase-app-manifest/deployment.yml
                        git add React-sonar-argocd/react-firebase-app-manifest/deployment.yml
                        git commit -m "Update deployment image to version ${BUILD_NUMBER}"
                        git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
                    '''
                }
            }
        }
    }

    post {
        always {
            echo 'Cleaning up workspace...'
            echo 'done'
            cleanWs()
        }
        success {
            echo 'Build and deployment successful!'
        }
        failure {
            echo 'Build or deployment failed. Check logs for details.'
        }
    }
}
